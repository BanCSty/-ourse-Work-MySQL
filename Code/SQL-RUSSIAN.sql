DROP DATABASE IF EXISTS library1;

-- Создание БД
CREATE DATABASE library1 CHARACTER SET utf8 COLLATE utf8_unicode_ci;

USE library1;

DROP TABLE IF EXISTS `Читательские билеты`;
DROP TABLE IF EXISTS `Книги`;
DROP TABLE IF EXISTS `Экземпляр книг`;
DROP TABLE IF EXISTS `Экземпляр книг1`;
Создание таблицы "Читательские билеты".
--------------------------------------------
Create table `Читательские билеты`(
    `№ читательского билета` int not null,
    `ФИО читателя` varchar(35) not null,
    `Домашний телефон` varchar(25) not null,
    `№ группы` varchar(10) not null,
    primary key(`№ читательского билета`)
);

INSERT INTO `Читательские билеты`
VALUES (1125, 'Федин Артем Степанович', '8-912-546-18-21', 'ИВТ-301'),
       (1307, 'Арсентьевна Любовь Михайловна', '8-495-872-31-27', 'БУ-201');

Создание таблтцы "Книги"
----------------------------------------------
create table `Книги`(
ISBN varchar(20) not null,
`ФИО автора` varchar(25) not null,
`Название книги` varchar(25) not null,
`Год издания` int not null,
`Цена, руб.` int not null,
primary key(ISBN)
);

INSERT INTO `Книги`
VALUES ('978-5-388-00003', 'Иванов Сергей Степанович', 'Самоучитель JAVA', 2018, 300),
       ('978-5-699-58103', 'Сидорова Ольга Юрьевна', 'JAVA за 21 день', 2020, 600),
       ('758-3-057-37854', 'Иванов Сергей Степанович', ' Механика ', 2018, 780),
       ('675-3-423-00375', 'Петров Иван Петрович', 'Физика', 2017, 450);

-- Создадим таблицу "Экземпляр книг" по типу "МНОГИЕ КО МНОГИМ"
-- -----------------------------------------------
create table `Экземпляр книг`(
`Инвентарный №` int not null,
ISBN varchar(20) not null,
`№ читательского билета` int,
primary key(ISBN, `Инвентарный №`),
foreign key(ISBN) references `Книги`(ISBN) on update cascade,
foreign key(`№ читательского билета`) references `Читательские билеты`(`№ читательского билета`) on update cascade
);

INSERT INTO `Экземпляр книг`
VALUES (1112333, '978-5-388-00003', 1125),
       (1112334, '978-5-388-00003', 1307),
       (1112335, '978-5-699-58103', NULL ),
       (1112336, '978-5-699-58103', 1307);

-- Для реализации связи многие ко многим нам нужен некий посредник между двумя рассматриваемыми таблицами. 
-- Он должен хранить два внешних ключа, первый из которых ссылается на первую таблицу, а второй — на вторую.

-- Создадим и заполним таблицу "Экземпляры книг1"
-- ---------------------------------------------------
create table `Экземпляр книг1`(
`Инвентарный №` int not null,
ISBN varchar(20) not null,
`№ читательского билета` int,
primary key(`Инвентарный №`));

INSERT INTO `Экземпляр книг1`
VALUES (2323233, '758-3-057-37854', null),
       (2322323, '675-3-423-00375', null);

-- №4 "INSERT INTO – заполнить таблицу «Экземпляры книг» данными из таблицы «Экземпляры книг1»"
-- ------------------------------------------------
INSERT INTO `Экземпляр книг`
SELECT * FROM `Экземпляр книг1`;


-- №5 "DROP – удалить таблицу «Экземпляры книг1»."
-- -----------------------------------------------
DROP table `Экземпляр книг1`;


-- №6 "UPDATE – изменить в поле «Цена» таблицы «Книги», стоимость каждой книги на 20%"
-- -----------------------------------------------
UPDATE `Книги` 
SET `Цена, руб.` = 1.2 * `Цена, руб.`;


-- №7 "DELETE – удалить книгу, ISBN которой равен 675-3-423-00375 из всех таблиц."
-- -----------------------------------------------
START transaction;
DELETE FROM `Книги` WHERE ISBN = '675-3-423-00375';
COMMIT;
-- Удаляем только из таблицы "Книги" т.к. эта таблица является родительской


/*
№8 SELECT – вывести на экран записи, содержащие следующие поля: 
ISBN, ФИО автора, Название книги, Цена для книг, цены которых находится в диапазоне от 400 до 700 рублей.
*/
-- --------------------------------------------
SELECT ISBN, `ФИО автора`, `Название книги`, `Цена, руб.` from `Книги`
where `Цена, руб.` between 400 and 700;

-- №9 SELECT – после задания № читательского билета, вывести на экран записи, содержащие следующие поля: 
-- № читательского билета, ФИО читателя, № группы, ISBN, Название книги, Цена по каждой книге, взятой этим читателем.
-- ---------------------------------------------
SET @n = 1307;
SELECT LL.`№ читательского билета`, LL.`ФИО читателя`, LL.`№ группы`, LB.ISBN, LB.`Название книги`, LB.`Цена, руб.` FROM `Читательские билеты` as LL
JOIN `Экземпляр книг` as LC ON LC.`№ читательского билета` = LL.`№ читательского билета`
JOIN `Книги` as LB ON LB.ISBN = LC.ISBN
Where LL.`№ читательского билета` = @n;


-- №10 "SELECT – вывести на экран записи, содержащие следующие поля: ISBN, ФИО автора, Название книги, Цена, для книг которые находятся в библиотеке."
-- ----------------------------------------------
SELECT LB.ISBN, LB.`ФИО Автора`, LB.`Название книги`, LB.`Цена, руб.` from `Книги` as LB 
JOIN `Экземпляры книг` as LC ON LB.ISBN = (SELECT LC.ISBN as LC where LC.`№ читательского билета` is null);

-- №11 "SELECT – вывести на экран записи, содержащие следующие поля: 
-- № читатель-ского билета, ФИО читателя, № группы, Количество книг, которое находятся у этого читателя на руках, если это количество не меньше двух"
-- ---------------------------------------------
SELECT LL.`№ читательского билета`, LL.`ФИО читателя`, LL.`№ группы`,
(SELECT COUNT(*) from `Экземпляр книг` as LC 
WHERE LL.`№ читательского билета` = LC.`№ читательского билета`) as COUNT
FROM `Читательские билеты` as LL
GROUP BY LL.`№ читательского билета` HAVING COUNT > 1

-- №12 "SELECT – вывести на экран запись – ISBN, ФИО автора c максимальным количеством экземпляров книг в библиотеке"
-- -----------------------------------------------
CREATE view S111 as 
SELECT LB.ISBN, LB.`ФИО автора`, count(`Инвентарный №`) as COUNTE
From `Книги` as LB 
JOIN `Экземпляр книг` as LC ON LB.ISBN = LC.ISBN
WHERE LC.`№ читательского билета` IS NULL
Group by LB.ISBN;
SELECT * FROM S111
Where S111.COUNTE = (SELECT MAX(COUNTE) FROM S111);


-- №13 "SELECT – вывести на экран записи, содержащие следующие поля: ISBN, ФИО автора, Название книги, Цена, Количество читателей, которые взяли эту книгу."
-- -----------------------------------------------
SELECT LB.ISBN, LB.`ФИО автора`, LB.`Название книги`, LB.`Цена, руб.`, 
(SELECT COUNT(*) FROM `Экземпляр книг` as LC where LC.`№ читательского билета` IS NOT NULL AND LC.ISBN = LB.ISBN) as COUNT
from `Книги` as LB
GROUP BY COUNT, LB.`ФИО автора`;

-- №14 "SELECT - вывести на экран запись, содержащую следующие поля: 
-- № читатель-ского билета, ФИО читателя, № группы, Количество взятых книг для читателей, которые взяли их максимальное количество"
-- -----------------------------------------------
CREATE view Test14 as
SELECT LL.`№ читательского билета`, LL.`ФИО читателя`, LL.`№ группы`, COUNT(LC.`№ читательского билета`) AS COUNT
FROM `Читательские билеты` as LL
INNER JOIN `Экземпляры книг` as LC ON LC.`№ читательского билета` = LL.`№ читательского билета`
GROUP BY 1,2,3 HAVING COUNT > 1;

SELECT * FROM Test14
Where Test14.COUNT = (Select MAX(COUNT) FROM Test14);

